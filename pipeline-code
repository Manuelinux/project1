node ('testing'){
    stage("Dev prerrequisites"){
        sh "python -V"
    }
        stage("Check out development repository"){
        git url: 'https://github.com/Manuelinux/project1.git', branch: 'dev'
    }
    stage ("Run code on dev environment"){
        sh "  PYTHONPATH='' nosetests --with-xunit --all-modules --traverse-namespace --with-coverage --cover-package=project1 --cover-inclusive"
        sh "python -m coverage xml --include=project1*"
        sh "pylint -f parseable -d I0011,R0801 project1 | tee pylint.out"
    }
    stage ("Publish results"){
        step([$class: 'CoberturaPublisher', autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: '**/coverage.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false])
        input 'Is everything ok?'
    }
    
    stage ("Git commit"){
        git url: 'https://github.com/Manuelinux/project1.git', 
        credentialsId: 'credentials_id',
        branch: 'master'
        withCredentials([[
           $class: 'UsernamePasswordMultiBinding',
           credentialsId: 'credentials_id',
           usernameVariable: 'GIT_USERNAME',
           passwordVariable: 'GIT_PASSWORD'
       ]]){
         sh 'git config --global user.email "your_email"'
         sh 'git config --global user.name "your_username"'
         sh 'git merge dev'
         sh 'git config credential.helper "/bin/bash ' + env.WORKSPACE + '/credential-helper.sh"'
         sh'git push origin master'
        }
    }
}
